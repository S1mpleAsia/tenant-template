apiVersion: apps/v1 # API version
kind: Deployment # Type of kubernetes resource
metadata:
  name: ${database.serviceName}-deployment # Name of the kubernetes resource
  namespace: ${namespace}
spec:
  replicas: ${database.deploymentReplicas} # No of replicas/pods to run
  selector:
    matchLabels: # This deployment applies to Pods matching the specified labels
      app: ${database.serviceName}
  template: # Template for creating the Pods in this deployment
    metadata:
      labels: # Labels that will be applied to all the Pods in this deployment
        app: ${database.serviceName}
    spec: # Spec for the containers that will run inside the Pods
      containers:
        - name: ${database.serviceName}
          image: ${database.imageName}:${database.imageVersion}
          imagePullPolicy: ${database.imagePullPolicy}
          ports:
            - containerPort: ${database.containerPort} # Should match the Port that the container listens on
          env: ${database.config}
---
apiVersion: v1 # API version
kind: Service # Type of kubernetes resource
metadata:
  name: ${database.serviceName} # Name of the kubernetes resource
  namespace: ${namespace}
spec:
  type: ${database.serviceType} # Exposes the service by opening a port on each node
  selector:
    app: ${database.serviceName} # Any Pod matching the label `app=polling-app-client` will be picked up by this service
  ports: # Forward incoming connections on port 80 to the target port 80 in the Pod
    - port: ${database.containerPort}
      targetPort: ${database.containerPort}
