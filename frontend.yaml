apiVersion: apps/v1 # API version
kind: Deployment # Type of kubernetes resource
metadata:
  name: ${frontendApp.serviceName}-deployment # Name of the kubernetes resource
  namespace: ${namespace}
spec:
  replicas: ${frontendApp.deploymentReplicas} # No of replicas/pods to run
  selector:
    matchLabels: # This deployment applies to Pods matching the specified labels
      app: ${frontendApp.serviceName}
  template: # Template for creating the Pods in this deployment
    metadata:
      labels: # Labels that will be applied to all the Pods in this deployment
        app: ${frontendApp.serviceName}
    spec: # Spec for the containers that will run inside the Pods
      containers:
        - name: ${frontendApp.serviceName}
          image: ${DOCKER_REGISTRY}/${frontendApp.imageName}:${frontendApp.imageVersion}
          imagePullPolicy: ${frontendApp.imagePullPolicy}
          ports:
            - containerPort: ${frontendApp.containerPort} # Should match the Port that the container listens on
          env: ${frontendApp.config}
---
apiVersion: v1 # API version
kind: Service # Type of kubernetes resource
metadata:
  name: ${frontendApp.serviceName} # Name of the kubernetes resource
  namespace: ${namespace}
spec:
  type: ${frontendApp.serviceType} # Exposes the service by opening a port on each node
  selector:
    app: ${frontendApp.serviceName} # Any Pod matching the label `app=polling-app-client` will be picked up by this service
  ports: # Forward incoming connections on port 80 to the target port 80 in the Pod
    - port: ${frontendApp.containerPort}
      targetPort: ${frontendApp.containerPort}
